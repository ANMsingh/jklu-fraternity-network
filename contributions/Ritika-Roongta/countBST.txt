class Node: 

    def __init__(self, data): 
        self.left = None
        self.right = None
        self.data = data
    
def getCountOfNode(root, low, high): 
    if root == None: 
        return 0

    if root.data == high and root.data == low: 
        return 1

    if root.data <= high and root.data >= low: 
        return (1 + getCountOfNode(root.left, low, high) + getCountOfNode(root.right, low, high)) 

    elif root.data < low: 
        return getCount(root.right, low, high) 

    else: 
        return getCount(root.left, low, high) 

def insert(root,data):  
    if root is None:  
        return Node(data)  
    else: 
        if root.data == data: 
            return root 
        elif root.data < data:  
            root.right = insert(root.right, data)  
        else: 
            root.left = insert(root.left, data) 
    return root 

if __name__ == '__main__':
    print("Enter number of test cases: ")
    T = input() 
    while (T!=0):
        N = input("Enter number of nodes in BST: ")
        y = input("Enter root value: ")
        r = Node(y)
        while(N!=1):
            x = input("Enter the node values")
            r = insert(r, x) 
            N = N - 1
        l = input("Enter the starting value: ")
        h = input("Enter the ending range value: ") 
        count = getCountOfNode(r, l, h)
        print(count)
        T -=1
